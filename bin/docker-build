#!/bin/bash

tools=$(dirname $0)/docker-tools.sh
if [ ! -f $tools ]; then
    echo "Cannot find docker-tools.sh"
	exit 1
fi
source $tools

if [ -n "$NO_DOCKER_CACHE" ]; then
	args[${#args[*]}]="--no-cache"
fi

defined=$(printf -- '%s\n' "${args[@]}" | grep -e -f)
if [ $defined ]; then
	echo "-f already defined"
elif [ -f .pkg/Dockerfile ]; then
	args=( "${args[@]}" "-f" ".pkg/Dockerfile" )
elif [ -f Dockerfile ]; then
	args=( "${args[@]}" "-f" "Dockerfile" )
fi

for arg in $DOCKER_ARGS; do
    value=$(eval echo \$$arg)
	args=( "${args[@]}" "--build-arg" "$arg=$value" )
done

for tag in $DOCKER_TAGS; do
	args=( "${args[@]}" "-t" "$DOCKER_IMAGE:$tag" )
done

ver=
if [ -n "$PKG_VERSION" ]; then
    ver="$PKG_VERSION"
elif [ -n "$BUILD_VERSION" ]; then
    ver="$BUILD_VERSION"
fi

if [ -n "$ver" ]; then
    ver=":$ver"
fi

cmd docker build "${args[@]}" -t $DOCKER_IMAGE$ver .

